#ifndef __ZX_NORMALIZED_CROSS_CORRELATION_TEMPLATE_MATCH_HPP__
#define __ZX_NORMALIZED_CROSS_CORRELATION_TEMPLATE_MATCH_HPP__ 1

#include "defs.hpp"
#include <vector>

namespace zx::tm
{
    [[maybe_unused]]
    const u08 kernel[4][25] = {
    { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0x00, 0x00, 0x00,
      0xFF, 0xFF, 0x00, 0xFF, 0xFF,
      0xFF, 0xFF, 0x00, 0xFF, 0xFF },
    { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0x00, 0x00, 0x00, 0xFF, 0xFF,
      0xFF, 0xFF, 0x00, 0xFF, 0xFF,
      0xFF, 0xFF, 0x00, 0xFF, 0xFF },
    { 0xFF, 0xFF, 0x00, 0xFF, 0xFF,
      0xFF, 0xFF, 0x00, 0xFF, 0xFF,
      0xFF, 0xFF, 0x00, 0x00, 0x00,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
    { 0xFF, 0xFF, 0x00, 0xFF, 0xFF,
      0xFF, 0xFF, 0x00, 0xFF, 0xFF,
      0x00, 0x00, 0x00, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
    };

    void init (const su32, const su32) noexcept;
    void stop (void) noexcept;
    void mgen (void) noexcept;
    void proc (const graph&, const f32) noexcept;
    const zx::graph& mask (const  u32) noexcept;
    const std::vector<zx::match>& matches(void) noexcept;

    // void mask (const su32) noexcept;
    // ru32 mask (void) noexcept;
    // const std::vector<zx::match>& matches(void) noexcept;
}

#endif
